{
	"info": {
		"_postman_id": "5b6c2aa0-2239-4c06-a272-6f822a238db4",
		"name": "MAC - PROJET",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "U1 - Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c106e5e-1e9f-4183-a80e-c1d510102757",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Register\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"david@test.ch\",\n\t\"firstname\":\"david\",\n\t\"lastname\":\"cruchon\",\n\t\"password\":\"password\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c106e5e-1e9f-4183-a80e-c1d510102757",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U3 - Register\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"alain@test.ch\",\n\t\"firstname\":\"alain\",\n\t\"lastname\":\"gobet\",\n\t\"password\":\"password\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "U3 - Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c106e5e-1e9f-4183-a80e-c1d510102757",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U3 - Login\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"kevin@test.ch\",\n\t\"firstname\":\"kevin\",\n\t\"lastname\":\"dovale\",\n\t\"password\":\"password\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "U3 - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c106e5e-1e9f-4183-a80e-c1d510102757",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"    pm.environment.set(\"userEmail\", jsonData.email);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U3 - Add Recipe\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"kevin@test.ch\",\n\t\"password\":\"password\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "U3 - Add Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"// Only for chaining test",
							"pm.environment.set(\"userEmailToFollow\", pm.environment.get(\"userEmail\"));",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U1 - Login\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"recipe\":{\n    \"name\":\"Sandwich jambon-beurre\",\n    \"preparation\":\"5\"\n  },\n  \"ingredients\": [\n\t{ \"name\":\"jambon\", \"quantity\": \"3\", \"unit\": \"tranches\" },\n\t{ \"name\":\"beurre\", \"quantity\": \"1\", \"unit\": \"c.s\" }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:3001/recipe",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "U1 - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c106e5e-1e9f-4183-a80e-c1d510102757",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"    pm.environment.set(\"userEmail\", jsonData.email);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U1 - Add Recipe\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"david@test.ch\",\n\t\"password\":\"password\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "U1 - Add Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Is a 'Tarte aux citrons'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].properties.name).to.eql(\"Tarte au citron\");",
							"    ",
							"    pm.environment.set(\"receipeToFollow\", jsonData[0].identity.low);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U1 - Add Recipe 2\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{userEmail}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"recipe\":{\n    \"name\":\"Tarte au citron\",\n    \"preparation\":\"10\"\n  },\n  \"ingredients\": [\n\t{ \"name\":\"citron\", \"quantity\": \"10\", \"unit\": \"pce\" },\n\t{ \"name\":\"sucre\", \"quantity\": \"4\", \"unit\": \"c.s\" }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:3001/recipe",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "U1 - Add Recipe 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Is a 'Carbonarra'\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].properties.name).to.eql(\"Carbonarra\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U1 - Add Recipe 3\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"recipe\":{\n    \"name\":\"Carbonarra\",\n    \"preparation\":\"20\"\n  },\n  \"ingredients\": [\n\t{ \"name\":\"crème\", \"quantity\": \"250\", \"unit\": \"cl\" },\n\t{ \"name\":\"lard\", \"quantity\": \"100\", \"unit\": \"g\" },\n\t{ \"name\":\"sel\", \"quantity\": \"2\", \"unit\": \"c.c\" }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:3001/recipe",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "U1 - Add Recipe 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Is 'Poulet rôti'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].properties.name).to.eql(\"Poulet rôti\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U1 - Follow U3\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"recipe\":{\n    \"name\":\"Poulet rôti\",\n    \"preparation\":\"90\"\n  },\n  \"ingredients\": [\n\t{ \"name\":\"poulet\", \"quantity\": \"1\", \"unit\": \"pce\" },\n\t{ \"name\":\"pomme de terre\", \"quantity\": \"500\", \"unit\": \"g\" },\n\t{ \"name\":\"citron\", \"quantity\": \"10\", \"unit\": \"cl\" }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:3001/recipe",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "U1 - Follow U3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"1\");",
							"});",
							"",
							"// Only for chaining test",
							"pm.environment.set(\"userEmailToFollow\", pm.environment.get(\"userEmail\"));",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Login\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/user/follow/{{userEmailToFollow}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"user",
						"follow",
						"{{userEmailToFollow}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c106e5e-1e9f-4183-a80e-c1d510102757",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status string\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"    pm.environment.set(\"userEmail\", jsonData.email);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Add Recipe\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"alain@test.ch\",\n\t\"password\":\"password\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Add Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Is a 'Bollognese'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].properties.name).to.eql(\"Bollognese\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Follow U1\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"recipe\":{\n    \"name\":\"Bollognese\",\n    \"preparation\":\"30\"\n  },\n  \"ingredients\": [\n\t{ \"name\":\"viande hachée\", \"quantity\": \"300\", \"unit\": \"g\" },\n\t{ \"name\":\"sel\", \"quantity\": \"3\", \"unit\": \"c.c\" },\n\t{ \"name\":\"tomate\", \"quantity\": \"200\", \"unit\": \"g\" }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:3001/recipe",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Follow U1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"1\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"Get citron\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/user/follow/{{userEmailToFollow}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"user",
						"follow",
						"{{userEmailToFollow}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get citron",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a95d5ba1-b7c9-4bb4-8eca-110f238716ba",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Is ingredient : 'citron'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].name).to.eql('citron');",
							"    ",
							"    pm.environment.set(\"ingredientToLike\", jsonData[0].id);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Like Ingredient\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/ingredients/q?match=citron",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ingredients",
						"q"
					],
					"query": [
						{
							"key": "match",
							"value": "citron"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Like Ingredient",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"1\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"Get poulet\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/ingredient/like/{{ingredientToLike}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ingredient",
						"like",
						"{{ingredientToLike}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get poulet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a95d5ba1-b7c9-4bb4-8eca-110f238716ba",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Is ingredient : 'poulet'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].name).to.eql('poulet');",
							"    ",
							"    pm.environment.set(\"ingredientToLike\", jsonData[0].id);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Like Ingredient 2\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/ingredients/q?match=poulet",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ingredients",
						"q"
					],
					"query": [
						{
							"key": "match",
							"value": "poulet"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Like Ingredient 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"1\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"Get Recommendations for U2\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/ingredient/like/{{ingredientToLike}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ingredient",
						"like",
						"{{ingredientToLike}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Recommendations for U2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fc08e7f-b487-4404-b7d9-6229fe986e97",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"",
							"pm.test(\"Recommended recipe : 'Poulet rôti'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].rank).to.eql(4);",
							"    pm.expect(jsonData[0].recipe.name).to.eql('Poulet rôti');",
							"    ",
							"    // Only for chain test",
							"    pm.environment.set(\"recipeToLike\", jsonData[0].recipe.id);",
							"});",
							"",
							"postman.setNextRequest(\"U2 - Like Recomm. Recipe\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{userEmail}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/recommendation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recommendation"
					]
				}
			},
			"response": []
		},
		{
			"name": "U2 - Like Recomm. Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3521032-2803-4336-b01a-91203a028e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"1\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"postman.setNextRequest(\"Get Recommendations for U2 again\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "acbdaf8e-ce9c-4323-a273-bb0f658373d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/recipe/like/{{recipeToLike}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recipe",
						"like",
						"{{recipeToLike}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Recommendations for U2 again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fc08e7f-b487-4404-b7d9-6229fe986e97",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"",
							"pm.test(\"Recommended recipe : 'Tarte au citron'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].rank).to.eql(2);",
							"    pm.expect(jsonData[0].recipe.name).to.eql('Tarte au citron');",
							"});",
							"",
							"postman.setNextRequest(null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{userEmail}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/recommendation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"recommendation"
					]
				}
			},
			"response": []
		}
	]
}